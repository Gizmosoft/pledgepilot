import Campaign from "../models/Campaign.js";
import multer from "multer";
import path from "path";

// searchAll is a helper service function
export const searchAll = async (params = {}) => {
  const campaigns = Campaign.find(params).exec(); // find() is a model function
  return campaigns;
};

// create is a helper service function
export const create = async (newCampaign) => {
  const campaign = new Campaign(newCampaign);
  return campaign.save(); // save() is a model function
};

// getCampaignByName is a service function to fetch a requested campaign
export const getCampaignByName = async (campaignName) => {
  const campaign = await Campaign.find({ name: campaignName });
  return campaign;
};

// getCampaignById is a service function to fetch a requested campaign by id
export const getCampaignById = async (campaignId) => {
  const campaign = await Campaign.findById(campaignId).exec();
  return campaign;
};

// TESTING: DO NOT TOUCH ###
const storage = multer.diskStorage({
  destination: "./public",
  filename: (req, file, cb) => {
    cb(null, `${Date.now()}--${file.originalname}`);
  },
});

const checkFileType = function (file, cb) {
  //Allowed file extensions
  const fileTypes = /jpeg|jpg|png|gif|svg/;

  //check extension names
  const extName = fileTypes.test(path.extname(file.originalname).toLowerCase());

  const mimeType = fileTypes.test(file.mimetype);

  if (mimeType && extName) {
    return cb(null, true);
  } else {
    cb("Error: You can Only Upload Images!!");
  }
};

const upload = multer({
  storage: storage,
  limits: { fileSize: 15000000 },
  fileFilter: (req, file, cb) => {
    checkFileType(file, cb);
  },
});

export const uploadImages = (request, response) => {
  upload.single("image")(request, response, (err) => {
    if (err) {
      return response.status(500).json({ error: "Error uploading image." });
    }

    if (!request.file) {
      return response.status(400).json({ error: "No image provided." });
    }

    const imagePath = request.file.filename; // This is the filename generated by Multer
    const imageUrl = `/${imagePath}`
  });
};
